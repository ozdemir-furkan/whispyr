version: "3.9"

services:
  postgres:
    image: postgres:16
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=whispyr
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  otel-collector:
    image: otel/opentelemetry-collector:0.99.0
    command: ["--config=/etc/otel-collector.yaml"]
    volumes:
      - ./otel-collector.yaml:/etc/otel-collector.yaml
    ports:
      - "4317:4317"

  jaeger:
    image: jaegertracing/all-in-one:1.57
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
    ports:
      - "16686:16686"

  seq:
    image: datalust/seq:2024.3
    environment:
      ACCEPT_EULA: "Y"
    ports:
      - "5341:80"

  app:
    build:
      context: ..        # docker klasöründen solution kökü
      dockerfile: Dockerfile
    environment:
      # LLM anahtarı
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      # ConnectionString'i environment ile veriyoruz (container içinden host 'postgres')
      - ConnectionStrings__Postgres=Host=postgres;Port=5432;Database=whispyr;Username=postgres;Password=${POSTGRES_PASSWORD}
      # (Opsiyonel) OTEL endpoint'in varsa:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    depends_on:
      - postgres
      - redis
      - otel-collector
    ports:
      - "5185:8080"   # host:container

volumes:
  pgdata: